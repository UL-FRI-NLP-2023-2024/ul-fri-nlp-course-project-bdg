[
  {
    "message": "Zdravo, prosim vas za nasvet kako naj popravim spodaj omenjeno napako.  junaki = {}\n\nclass Junak:\n    def __init__(self, ime, zdravje, moc, obramba):          #junak ima ime, moc, zdravje, obrambo\n        self.ime = ime\n        self.zdravje = zdravje\n        self.moc = moc\n        self.obramba = obramba\n    \n    def kreacija(self, ime, zdravje, moc, obramba):\n        if self.zdravje < 1:\n               return \"Zdravje mora biti pozitivno\"\n          \n        junaki[i] = [self.ime, self.zdravje, self.moc, self.obramba]\n\n    def __str__(self):\n        return \"Ime: {i}, zdravje: {z}, moc: {m}, obramba: {o}\" .format(i=self.ime, z = self.zdravje, m = self.moc, o = self.obramba)\n\n\nk = int(input(\"\\nVnesite stevilo bojevnikov: \"))\n\nfor i in range(0, k):\n     ime = input(\"Vnesite ime junaka: \")\n     zdravje = int(input(\"Vnesite zdravje junaka: \"))\n     moc = int(input(\"Vnesite moc junaka: \"))\n     obramba = int(input(\"Vnesite obrambo junaka: \"))\n     junaki[i] = junaki[i].kreacija(ime, zdravje, moc, obramba)\n Napisat moram program v stilu \"igre\" z razredi. Za začetek imam razred Junak, v katerem imam metodo kreacija za ustvarjanje lika igre. S for zanko spodaj vnašam posamezne vrednosti vsakega junaka v slovar junaki  Dobim napako: line 27, in module junaki[i] = junaki[i].kreacija(ime, zdravje, moc, obramba) KeyError: 0  Moja ideja je taka, da je ključ posameznega polja tudi indeks posameznega bojevnika, a izgleda da se to ne da? Torej, če vnesem dva bojevnika, bi se moralo izpisat nekako takole (podajam primer): print(junaki) {1: ['Bojevnik1', 1000, 350, 100], 2: ['Bojevnik2', 1500, 200, 150]}  Prosim za nasvet, hvala! ",
    "user": "RatedR"
  },
  {
    "message": "Funkcija \"kreacija\" je tisto, čemur se v angleščini reče \"factory\". Ta funkcija ni del razreda Junak - zgolj vrne objekte iz razreda Junak, zato parametra \"self\" ne potrebuje.  http://python-3-patterns-idioms-test.re...  Nehigienično je tudi, da funkcija vrne niz v primeru napake, namesto da bi sprožila izjemo, ker programer, ki bo uporabil tvojo funkcijo \"kreacija\", praviloma ne bo pričakoval, da je po uspešnem klicu vrnjena vrednost niz s sporočilom o napaki. V primeru spodaj sem to popravil.   class Junak:\n    def __init__(self, ime, zdravje, moc, obramba):          #junak ima ime, moc, zdravje, obrambo\n        self.ime = ime\n        self.zdravje = zdravje\n        self.moc = moc\n        self.obramba = obramba\n    def kreacija(ime, zdravje, moc, obramba):\n        if self.zdravje < 1:\n            raise Exception(\"Zdravje mora biti pozitivno\")\n        return Junak(ime, zdravje, moc, obramba)\n  Tale koda:        junaki[i] = junaki[i].kreacija(ime, zdravje, moc, obramba)\n  je napačna: junaki[i] se v izrazu zgoraj sklicuje na polje, ki še ne obstaja. Pravilno bi bilo bodisi takole:        junaki[i] = Junak(ime, zdravje, moc, obramba)\n  Ali pa takole:        junaki[i] = Junak.kreacija(ime, zdravje, moc, obramba)\n ",
    "user": "jype"
  },
  {
    "message": "Kot prvo hvala za pomoč, zdaj deluje in pride vsaj čez vnos, izpis mi še dela nekaj težav (prilagam screen):    Koda: http://pastebin.com/GR495f9u  Glede tega:  jype je 17. dec 2016 ob 14:49 izjavil:Funkcija \"kreacija\" je tisto, čemur se v angleščini reče \"factory\". Ta funkcija ni del razreda Junak - zgolj vrne objekte iz razreda Junak, zato parametra \"self\" ne potrebuje.  me pa zanima, če to velja samo za tiste metode kjer definiramo npr. spremenljivko, ob spreminjanju se pa uporabi self? ",
    "user": "RatedR"
  },
  {
    "message": "RatedR> me pa zanima, če to velja samo za tiste metode kjer definiramo npr. spremenljivko, ob spreminjanju se pa uporabi self?  To je v resnici zgolj dogovor, razumeti pa moraš izraze:  Junak je razred (class), to je neke vrste \"načrt\" oziroma \"štampiljka\". Ko class definiraš, lahko potem ustvarjaš \"odtise\" oziroma \"primerke razreda\" (class instance oziroma object), ki so v pomnilniku ločeni.  Funkcija, ki vrne instanco  junaki je v tvojem primeru slovar, kar je nenavadno, ker so indeksi cela števila. Za takšno strukturo se običajno uporablja list (ki se ga definira z junaki = []). List sam poskrbi, da ne vsebuje lukenj, če izbrišeš vmesni indeks (vsi višji se premaknejo za eno število nižje). Če je to naloga, kjer moraš delat s slovarji, gre za nenavadno nalogo, ki ne uči dobre prakse.  Tvoj izpis je OK, ampak za izpis, kakršnega želiš, moraš definirati še posebno funkcijo __str__(self), ki določa pretvorbo instance razreda Junak v niz znakov, takole:       def __str__(self):\n        return str([self.ime, self.zdravje, self.moc, self.obramba])\n ",
    "user": "jype"
  },
  {
    "message": "OK, zdaj vidim, da __str__ že imaš, uporabljaš pa Python 3, zato moraš v tvojem primeru definirat še funckijo __repr__(self), ki vrne niz, ki naj bi objekt opisal v pythonu, najlažje takole:       def __str__(self):\n        return \"Ime: {i}, zdravje: {z}, moc: {m}, obramba: {o}\" .format(i=self.ime, z = self.zdravje, m = self.moc, o = self.obramba)\n        __repr__ = __str__\n  lahko pa, če si vljuden, takole:       def __repr__(self):\n        return \"Junak({i}, {z}, {m}, {o})\" .format(i=repr(self.ime), z = self.zdravje, m = self.moc, o = self.obramba)\n  ki pravilno vrne reprezentacijo junaka v pythonu. Če izpis prilepiš v python ukazno vrstico, dobiš nazaj enak objekt, kot si ga sprintal. ",
    "user": "jype"
  },
  {
    "message": "Hvala za pomoč, ko si omenil če moramo uporabljat slovarje, načeloma lahko tudi ne. Kljub temu da je naloga precej obsežna in je ne razumem v celoti ter ne določa kako moramo naredit npr. shranjevanje bojevnikov pa probavam nekaj po svoje.  Za razred Junak moram napisat določene metode, za metodo kreacija je napisano samo to:  kreacija - Metoda mora poleg shranjevanja podatkov preveriti tudi, če so vse vrednosti veljavne (največje zdravje in obe največji moči morata biti pozitivna števila, večja od ena). Če kakšna vrednost ni veljavna, naj sproži napako. Ob tem mora metoda nastaviti trenutno zdravje kot enako največjemu zdravju in zadnjo posodobitev na trenutni čas.  Tudi drugje ne piše kako naj izvedem shranjevanje, kako ti to razumeš? ",
    "user": "RatedR"
  }
]