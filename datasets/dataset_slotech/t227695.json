[
  {
    "message": "Kateri jezik za izdelavo spletisc se vam zdi najboljsa nalozba za prihodnost? Zakaj?  Sam obvladam PHP in (My)SQL, vendar me zadnje case vse bolj mika nekaj novega... Odlocil sem se, da bom izbiral med Rubyjem (Ruby on Rails) in Pythonovim frameworkom (ki pa jih se nisem - podrobno - preucil). Zanima me vase mnenje, vasi argumenti, tudi za druge jezike.   Dajmo dodat se eno pravilo; da se izognemo \"vojni\" ne odgovarjajte na druge poste (ruby tega nima, python to ima... in obratno), napisite svoje argumente, na koncu pa se naj uporabnik odloci kaj mu bolj odgovarja. ",
    "user": "edini"
  },
  {
    "message": "Pomoje je PHP še najbolša izbira za spletne strani, ker je že od začetka namenjen za spletne strani in ima dosti funkcij, ki so prav z spletnim programiranjem povezane... ",
    "user": "sverde21"
  },
  {
    "message": "Sverde trenutno mogoče, pa še to je pod vprašajem.  Razni frameworki, ki temelijo na pythonu ali ROR, imajo to prednost, da se pišejo zelo hitro. Ni potrebe po šarenju kode med htmljem in podobno.  Prohodnost je vsekakor v takih \"zbirkah\". Mnogi napovedujejo kot prihodnji de facto standard prav Python, jaz jim nekako kar verjamem. ",
    "user": "BluPhenix"
  },
  {
    "message": "Hmja sei tudi pri PHP imaš template systeme kot so Smarty,... kjer lahko ločiš PHP od HTML in tud obstaja neka zadeva (ne spomnem se imena trenutno) podobna Ruby On Rails,... ",
    "user": "sverde21"
  },
  {
    "message": "Ja na PHP je zadnje čase kar veliko klonov RoR.  Če pa že zbiraš med Ruby in Python, ti jaz priporočam Python, ker z njim ne boš omejen na web dev. V Pythonu imaš knjižnice za praktično vse. Jaz sm naredu eno uporabo win aplikacijo (ki mi je v naslednjih dneh prihranila kar nekaj ur dela) v dveh popoldnevih in sm bil skori popoln n00b v Pythonu. ",
    "user": "[MYTiX]"
  },
  {
    "message": "Najboljša naložba za prihodnost v Sloveniji je študi ekonomije. Podjetja pač zaposlujejo vodstveni kader po sistemu, če ve kako vključiti računalnik, in, če ima diplomo iz ekonomije, je lahko vodja programerjev.  Če pa hočeš živeti od programiranja, pa je najboljša naložba v poznavanje posameznih platform in načinov učinkovite uporabe. Programski jeziki so drugotnega pomena, ker se od programerja pričakuje zmožnost prehajanja med različnimi jeziki, kakor se pač obrne podjetje v danem mesecu. Včeraj je bil Perl, danes je PHP, za jutri pripovedujejo Ruby... whatever. Če se boš pravilno usmeril, te ti prehodi ne bodo niti najmanj motili. Kdor pa se samo založi z kupom narejene kode za en jezik in eno platformo itak nima neke hude prihodnosti v tem poslu. ",
    "user": "BlueRunner"
  },
  {
    "message": "BluRunner, prosim da drugiš pogledaš o čem govori tema. Stvaritelja zanima, kateri programski jezik / kateri framework je najbolj pespektiven za prihodnost. Ni spraševal o študiju ..., če bi spraševal o študiju bi verjetno dal temo v šolo, ne pa v Izdelavo spletišč.  Glede različnih programskih jezikov in prehajanja... kakor kje. Ni nujno, da morajo programerji znati prehajanje med jeziki, marsikdaj je zaželeno, da poznajo določen jezik do obisti in ga tako najbolj učinkovito konfigurirajo in pišejo. Če delaš en teden eno drugi teden drugo, se navadno to ne da ... ",
    "user": "BluPhenix"
  },
  {
    "message": "Ce mislis delat spletne aplikacije potem bi jaz rekel da Java/Jsp.. ce rabis samo dinamicne spletne strani potem pa vseeno kaj.. php/python/other..  Sicer meni Java ni prevec vsec ampak precej vecjih firm to uporablja.. Zaradi velikega izbora knjiznic, objektne orientiranosti, standardov, ki jih definira Sun, prenosljivosti.. izvorna koda se da prevesti... ",
    "user": "manaay"
  },
  {
    "message": "Ce mislis delat spletne aplikacije potem bi jaz rekel da Java/Jsp.. ce rabis samo dinamicne spletne strani potem pa vseeno kaj.. php/python/other..  Kaj pa bi ti definiral kot spletno aplikacijo in kaj kot le dinamično spletno stran?  Nisem čisto prepričan da je tako velika razlika med Javo in vsem ostalim.  Fajn če je ogrodje open source, ker pol točno vem kako kaj dela, če slučajno rabim. Lahko tudi sodelujem ali na kakršen koli način pripomorem k boljšemu končnemu produktu. ",
    "user": "[MYTiX]"
  },
  {
    "message": "spletna aplikacija ima v ozadju neko logiko, ki temelji na objektih in relacijami med njimi.. ima tocno definirane procese, ki zajemajo objekte.. locavanje med programsko kodo in htmljem je skorajda obvezno, ce hoces zagotoviti preglednost.. Obicajno je spletnim aplikacijam osnova framewok, ki zajema template sistem, seje, logfing, itd.. Primer bi bil kasen site zavarovalnice, vecje spletne trgovine ali kaj podbnega.. kjer je v ozadju lahko 100 ali vec SQL tabel in je fajn uporabljati ORM za dostop do baze..  Dinamicna spletna stran pa je zame v osnovi html stran z dinamicno vsebino.. programska koda zmesana z htmjem v eni datoteki.. v ozadju manjsa bazica.. in to je to.. nekaj takih strani tvori celoten site.. npr. predstavitev podjetja, ki zajema nekja produktov, novice, nekaj uporabnikov, ki imajo moznost urejati vsebino..   Nisem rekel da je java full drugacna od drugih jezikov, tudi v perlu se da objektno programirat in uporabljat podobne module kot so v Javi.. Mislim pa da je ena boljsih nalozb ce se hoces it vecje zadeve..  lp..M ",
    "user": "manaay"
  },
  {
    "message": "Poglej si recimo  Django framework za zacetek. Predvsem zato, ker ima zelo dobro krivuljo ucenja. Zelo hitro (recimo v en tednu) bos namrec znal naredit 90% stvari, ki jih sedaj delajo PHP programerji. Kasneje pa se mogoce se razglej v smer TG, ce bos cutil potrebo po vecji moci.  Pomojem se ti bo pa v praksi zgodilo, da ko bos imel dober framework spodaj, ki ti bo zelo hirto omogocal delat server-side stvari, da se bos zelel se malo nauciti Ajaxa in predvsem osnovnega Javascripta. ",
    "user": "Gandalfar"
  },
  {
    "message": "Kar se zaposlitve tiče je tako, da je ogromno služb za Javo, .NET in PHP, so pa zato recimo Python programerji precej bolj iskani in imajo boljše pogajalsko izhodišče na račun tega, da jih je malo in vsaj trenutno znanje kakšnega izmed bolj \"eksotičnih\" jezikov načeloma pomeni višje minimalno znanje programiranja na splošno.  Kar se tiče same tehnologije, iz vsega srca priporočam  TurboGears, ampak sem pristranski.  P.S. ljudji, ki svojo izbiro opravičujejo z domnevno kompleksnostjo svojih umotvorov ni za resno jemati.  ",
    "user": "OwcA"
  },
  {
    "message": "manaay: Moje mnenje je, da ne gre preveč ločevati dinamičnih spletnih stani in spletnih aplikacij. Zame je stvar zelo podobna. Pa tudi po velikosti strani je težko ocenit. Recimo 80% spletnih strani ki jih delam, je za manjša podjetja z nekaj podstranmi, par obrazci, morda katalogom. Vse so pa narejene na nekem ogrodju, ki precej pohitri delo, tudi z orm. S tem sem si delo zmanjšal vsaj na polovico. A so al niso to spletne aplikcaje?  Sej stvar je skorej brez pomena, ampak se mi je zdelo zanimivo tvoje ločevanje. Itak smo totlano off.  Glede Pytona so pa že vse povedal. Začni kar v TG. Mislim da če prihajaš iz PHP, ga boš kar hitro zakapiral. Edini problem je s hostanjem. Nekateri npr. ponujajo Python, ampak brez ssh dostopa in moraš vse prostiti njihove admine. ",
    "user": "[MYTiX]"
  },
  {
    "message": "Po splosni analizi \"vseh\" jezikov (frameworkov) sem se odlocil, da bom svoj cas posvetil Pythonu.  Obnovil sem stran, ki je bila napisana v PHPju v Railsu in  Webpy. Webpy se mi zdi zelo zanimiv, prav zaradi preprostosti in ker pises res pravo python kodo. Nocoj bom verjetno se malo podrobneje probal spoznat django in tg, nato pa se bom posvetil le enemu in upam, da ga bom nekoc obvladal vsaj tolk kot zdaj obvladam php... no, v bistvu se bolj :)  No, preden pa bom zacel kak framework studirat, pa bom se raje kako Python knjigo prebral. ",
    "user": "edini"
  }
]