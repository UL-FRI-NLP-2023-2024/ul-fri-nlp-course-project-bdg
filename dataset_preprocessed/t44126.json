[
    {
        "role": "user",
        "message": "Lp... Rad bi začel programirat mikrokontrolerje :).. in seveda nevem nc o tem kaj je najtabolje kk se to dela ipd... sicer znam velik programriat(vb, c/c++, pascal, phyton, mysql .. :))...  tk da moja želja :)  Pač kaj je najbolj poceni/najboljše.. kk sem bral so to neki ATMEL AVR  ji... no če veste za kej bolšga mi povejte... drgač pa če mi kdo najde kake članke o teh kontrolerjih oz načrte za njihov programtor in pa še kej svetuje... lp"
    },
    {
        "role": "assistant_0",
        "message": "odsurfaj na http://www.elektro-n.com/ pa preberi malo forum"
    },
    {
        "role": "assistant_1",
        "message": "Jaz bi se na tvojem mestu zabaval s PICi ali ATmeli. Eni in drugi so solidno zastopani pri nas.  PICi imajo bistveno večji razpon modelov in precej novih serij a najbolj zanani PICi pri nas so malo slabokrvni v primerjavi z Atmeli.  Ljudje pa jih enostavno ne poznajo in se ne trudijo z močnejšimi modeli.  Obe družini imata na voljo zastonj razvojno okolje a zadnjič kosem poskušal, je bil Microchipov MPLAB jasen zmagovalec.  Za obe seriji se da kupit programator in za obe se ga da tud naredit zastonj po projektu z Neta, z Googlom boš našel full enih simpl programatorčkov.  Za karkoli se boš odločil, če se misliš zares spustiti v to, vsekakor naštudiraj assembler, mogoče tudi C. Vse ostalo ni za te kebrčke.  Folk ki to programira v BASICu bi rad spoznal zadeve, ne da bi mu bilo treba karkoli vedeti o njih     Aja, PICi imajo noro velik literature o realiziranih projektih, kjer so pokazani vsi detajli zanimivih projetkov, z vsemi drobnarijami in skrivnostmi velikih mojstrov.   Pa še nekaj- ne bit lesen. Znajdi se- sedaj kot google dela zate zastonj, to ne bi smelo bit težko..."
    },
    {
        "role": "assistant_2",
        "message": "PICi imajo bistveno večji razpon modelov in precej novih serij a najbolj zanani PICi pri nas so malo slabokrvni v primerjavi z Atmeli.  Z drugim delom stavkom se ne bi najbolj strinjal, če le pogledaš nap. 16F877 ,ki je lahko dobavljiv pri nas pa mi objasni česa ima katerikoli Atmel več ? Tole je Copy/ paste (da me ne boš obsojal, da sem kaj prekopiral od kot) z microchipove literature :30292c.pdf ? Only 35 single word instructions to learn ? All single cycle instructions except for program branches which are two cycle ? Operating speed: DC - 20 MHz clock input DC - 200 ns instruction cycle ? Up to 8K x 14 words of FLASH Program Memory, Up to 368 x 8 bytes of Data Memory (RAM) Up to 256 x 8 bytes of EEPROM Data Memory ? Pinout compatible to the PIC16C73B/74B/76/77 ? Interrupt capability (up to 14 sources) ? Eight level deep hardware stack ? Direct, indirect and relative addressing modes ? Power-on Reset (POR) ? Power-up Timer (PWRT) and Oscillator Start-up Timer (OST) ? Watchdog Timer (WDT) with its own on-chip RC oscillator for reliable operation ? Programmable code protection ? Power saving SLEEP mode ? Selectable oscillator options ? Low power, high speed CMOS FLASH/EEPROM technology ? Fully static design ? In-Circuit Serial Programming??(ICSP) via two pins ? Single 5V In-Circuit Serial Programming capability ? In-Circuit Debugging via two pins ? Processor read/write access to program memory ? Wide operating voltage range: 2.0V to 5.5V ? High Sink/Source Current: 25 mA ? Commercial, Industrial and Extended temperature ranges ? Low-power consumption: - < 0.6 mA typical @ 3V, 4 MHz - 20 ?A typical @ 3V, 32 kHz - < 1 ?A typical standby current Peripheral Features: ? Timer0: 8-bit timer/counter with 8-bit prescaler ? Timer1: 16-bit timer/counter with prescaler, can be incremented during SLEEP via external crystal/clock ? Timer2: 8-bit timer/counter with 8-bit period register, prescaler and postscaler ? Two Capture, Compare, PWM modules - Capture is 16-bit, max. resolution is 12.5 ns - Compare is 16-bit, max. resolution is 200 ns - PWM max. resolution is 10-bit ? 10-bit multi-channel Analog-to-Digital converter ? Synchronous Serial Port (SSP) with SPI??(Master mode) and I2C??(Master/Slave) ? Universal Synchronous Asynchronous Receiver Transmitter (USART/SCI) with 9-bit address detection ? Parallel Slave Port (PSP) 8-bits wide, with external RD, WR and CS controls (40/44-pin only) ? Brown-out detection circuitry for Brown-out Reset (BOR)    PIC ima tudi kar nekaj \"nerodnih\" stvari. Ena iz med njih je nerodno preklaplanje med stranmi, pri vstopu v prekinitev se ne shrane W ter status v sklad.... Poleg tega tudi cenovno ni najugodnejši  lp Silvo"
    },
    {
        "role": "assistant_1",
        "message": "Hotu sem reč, mnogi poznajo samo @assistant_2.  Masa folka nikoli ni slišala za 16F877, da o čem drugem ne govorimo..."
    },
    {
        "role": "user",
        "message": "okej... odločo sem se za ATMLEA :) al ka pac je.. zdej pa kk se nardi kurčev programator pa tepizdarije.. kk ga naj sprogramiram .. lp"
    },
    {
        "role": "assistant_1",
        "message": "google atmel avr programmer ali kaj v tem stilu..."
    },
    {
        "role": "user",
        "message": ":))) ja itak... no se neki sem medtem našo .. upam da je to to če pa ni .. pač jebi ga za tiste ko bi pa radi zaceli z ATMELOVIMI čipi pa majo tule en kr cool link...  http://www.maxcode.com/nuke/search.php?..."
    },
    {
        "role": "assistant_3",
        "message": "Free C (AVR-gcc) compiler in vso potrebno dokumentacijo, forum in se kaj pa dobis na naslednji strani avrfreaks  Assembler je pa od IAR zastonj, dobis ga na atmelovi uradni strani ali pa strani od IAR  Kako je pa s PICi in Cjem. Ali obstaja free C compiler, ki bi podpiral vecino dobavljivih PICov?"
    },
    {
        "role": "assistant_1",
        "message": "Jaz sem enkrat fasal en High-techov compiler (verzija za PICe), ki baje suva, samo je nisem uporabljal do danes. Tisto kar sem rabil, sem itak napisal v assemblerju.  Ja, baje obstaja kar nekaj orodij, ki pa jih je google svojčas vedno našel."
    },
    {
        "role": "assistant_4",
        "message": "pozdravljeni  jst bi pa prašal kaj menite o zadevi an spodnjem linku. v življenju še nisem progamiral mikrokontrolerjev, mi pa programiranje kar leži. še posebej V.Basic,C...  http://www.mikroe.com/en/tools/bigpic5/  prosim za mnenje. LP"
    },
    {
        "role": "assistant_5",
        "message": "Najnovejši Micročipov MPLAB (8.14) že vsebuje C.  Tako da je vse skupaj bolj izbira kaj ti je bolj všeč, ali pa če si bolj napreden, kaj v bistvu sploh rabiš (razni interfaci).  LP I."
    },
    {
        "role": "assistant_6",
        "message": "Mmm mokrikontrolerji :P"
    },
    {
        "role": "user",
        "message": "heh, jebiga se zgodi tudi najbolsim :D"
    },
    {
        "role": "assistant_0",
        "message": "Jaz sem in uporabljam oboje. Pred leti sem z legendarnim PIC16C84 (PIC@assistant_2) naredil polnilec baterij. Deloval je pri 32kHz kristala, kar se je interno zdelilo še z 4. Progy napisan v assemblerju. Ostalo je pa še več kot polovica prostora prostega v mikrokontrolerju   Edina večja razlika je recimo ta, da mi PIC18F8722 ne dela pri frekvenci višji kot 10MHz notranje ure. če priključim več kot 10MHz kristal in notranji PLL ne dela, ali pa sem samo jaz imel to smolo. Hotel sem namreč uporabiti 11.0592MHz zaradi baudratev. Na koncu sem se moral zadovoljiti z 7.3728MHZ. Pri Atmelu jih lahko naviješ tudi na malo večje frekvence + notranja frekvenca se ne zdeli z 4 kot je to pri PIC.  Sam uporabljam Bascom AVR že vrsto let in je zelo zmogljivo orodje, prav tako uporabljam MPLAB C18 in je koda v C-ju. Moj 1. projekt je bil v ASMju sedaj uporabljam višje jezike. Kar je tudi stvar okusa."
    },
    {
        "role": "assistant_4",
        "message": "hvala vsem za nasvete. če ima kdo pa še kaj za dodat, naj kar napiše. meni pride vse prav. LP"
    },
    {
        "role": "assistant_7",
        "message": "monster, predlagam da začneš z pic18F. Za razliko od pic16f, imajo pic18f avtomatično izbiranje ram bankov, zato se znebiš mnogih ukazov, ki ti delajo preglavice. Poleg tega imajo pic18f še mnogo drugih bonbončkov. V splošnem pa so veliko lažji za programiranje v assembliju. Če boš programiral v Cju, potem verjetno pri zahtevnosti programiranja ni razlike...  po prebiranju malo nižje, ti vseeno predlagam pic nad atmel, armtel al kva je že... za armtel ne vem kakšno dokumentacijo imajo, vem pa da ima pic odlično.  ah krep. odgovrajam na 6 let star post :S"
    },
    {
        "role": "assistant_8",
        "message": "Pred časom sem sprogramiral sistem za regulacijo temperature z nadzorom iz PC (Windows: Hyper terminal) v aseblerju za PIC-a. Vstrajal sem do konca, čeprav mi je protokol za komunikacijo požrl pol zdravja. Potem sem pteskočil na AVR-je ker sem dobil invormacijo in obljubo za pomoč, če bom delal z AVRco (Pascal). Sedaj ko sem tu zvedel da ima zadnja verzija MPlab-a tudi C compiler. Se bom mogoče ponovno povrnil na PIC-a, ker se da na mikrochipovi strani dobiti močno podporo na forumu. Bascom razvojnega okolja pa ne poznam.  Vsekakor pa te opozarjam, da je izdelava svojega hardware-ja(1) za programiranje in začetek s softwarom(2) še kar kompleksna zadeva. In najprej si poišči kako shemo kjer boš videl kaj mora MCU (3) imeti da ga spraviš k življenju.   V zgornjem odstavku so navedene 3 točke. Jaz sem si olajšal začetek, tako da sem si za PIC kupil serijski programator (tocka 1). In pol naredil sam paralelni programator, ker na prenosniku nisem imel serijskega izhoda."
    },
    {
        "role": "assistant_9",
        "message": "Jaz sem začel z AVRjem in pri njemu zaenkrat tudi ostajam. Programiram pa v Cju, bom pa v kratkem preizkusil tudi malo v asemblerju.  Če boš v Cju programiral, verjetno tako ni velikih razlik. V asemberju je pa pri PICih drugače kot pri AVRjih. Ampak zaenkrat še nisem delal v tem."
    },
    {
        "role": "assistant_10",
        "message": "Če programiraš v Cju, je edina razlika med uCji v nastavljanju registrov za periferijo, plus mgoče kaj razlike med različnimi compilerji. Ko pa delaš z assemblerjem, imaš razlike že pri različnih uCjih istega proizvajalca.."
    },
    {
        "role": "assistant_11",
        "message": "Jaz sem začel pri PICih (16f84) z asemblerjem, nato preklopil na C. Potem sem v C-ju programiral tudi AVRje in dsPICe.  Asm na začetku je dober zato, da veš v kaj približno se tista C koda pretvori in kaj se dogaja na tvojem MCU. Aja pa Asm pride prav v časovno kritičnih procesih."
    }
]