[
    {
        "role": "user",
        "message": "Zdravo,  občasno programiram, manjši projekti, samo bi vseeno rad imel nek sistem za nadzor nad programsko kodo. Kolikor gledam je GIT trenutno najbolj pametna odločitev. Malo ga že uporabljam, ne obvladam pa še povsem zadeve.  Nekaj sem tuhtal o:  - git lokalno v dropbox folder - git remote na windows share  - github (7€/mesec)  Kakšen drug predlog?  Uporabljam Eclipse, PyCharm, VS na Win7 OS"
    },
    {
        "role": "assistant_0",
        "message": "ali pa tudi googlecode - ima SVN, Git..."
    },
    {
        "role": "user",
        "message": "Google code nima privatnih repositorijev.   Gledam pa bitbucket. Omejitev free računa je le 5 uporabnikov na repositorij, kar je meni itak vseeno ker rabim samo zase. Kdo uporablja?"
    },
    {
        "role": "assistant_1",
        "message": "Jaz priporočam http://unfuddle.com/. Podpirajo GIT in SVN. Za manjše projekte je brezplačen paket čist dovolj. To je do 200mb in 2 uporabnika."
    },
    {
        "role": "assistant_2",
        "message": "@user je 26. dec 2011 ob 13:03 izjavil:Google code nima privatnih repositorijev.   Gledam pa bitbucket. Omejitev free računa je le 5 uporabnikov na repositorij, kar je meni itak vseeno ker rabim samo zase. Kdo uporablja?   BitBucket je najverjetneje drugi največji tak host poleg GitHuba in nas ga kar nekaj uporablja pa smo kar zadovoljni. Predvsem je prednost v tem, da imaš lahko neomejeno privatnih repozitorijev in ti ne težijo z omejitvijo prostora."
    },
    {
        "role": "assistant_0",
        "message": "pol pa tko povej :)  mogoče par idej - http://stackoverflow.com/questions/5979..."
    },
    {
        "role": "assistant_3",
        "message": "Sam tudi lokalno uporabljam git."
    },
    {
        "role": "assistant_4",
        "message": "Jz uporabljam: - za vse svoje projekte git - za tuje projekte ce imajo svn uporabljam git-svn - za svoje opensource stvari github - za svoje privat stvari imam repoje na VPSu  Drugace je github res super, ce bi bilo zastojn za privat bi imel vse tam :) Ce delas web zadeve potem se splaca imet pac VPS pa das kar tja. Je pa res da nimas bombonckov kot jih ima github. Morda bom v prihodnosti tudi placal github, ceprav niso ravno najbolj poceni. Omenjene alternative pa bom tudi pogledal :) Bojim se samo da bojo eventuelno presli na isti placljivi model kot github."
    },
    {
        "role": "assistant_5",
        "message": "Kar se tice githuba...a je kdo kje videl kksn dobr zastonj server softvare...da bi zadevo sam hostal(na na disku ampak strezniku). Neka git alternativa visualsvn serverju in klientu z integracijo v Visual Studio?"
    },
    {
        "role": "assistant_4",
        "message": "za integracijo z VS se ziher komot da zrihtat... http://www.google.si/search?sourceid=ch...  za server pa po mojih izkusnjah ni kaksnega softwarea ki bi se resnicno lahko sploh primerjal z githubom... drugace edini tak ki ga poznam je gitorious. sem nekaj probaval sam nisem nikol resno uporabljal tko da tezko kaj vec povem osebno uporabljam gitosis na strezniku, ker je zelo enostaven za nastavit... ne ponuja pa nobenega web interfacea. na OS X je kar vredu klient GitX. tako da v bistvu ne rabis nujno webinterfacea ce imas dober GUI lokalno. sicer pa ko se navadis na command line gita se da veliko stvari kar enostavno pocet, jaz GUI uporabljam samo za gledanje preteklih commitov in branchov"
    },
    {
        "role": "assistant_6",
        "message": "Git je namenjen distribuiranemu razvoju z veliko branchi. Torej zelo brezveze za enega razvijalca."
    },
    {
        "role": "assistant_7",
        "message": "@assistant_6 je 26. dec 2011 ob 20:45 izjavil:Git je namenjen distribuiranemu razvoju z veliko branchi. Torej zelo brezveze za enega razvijalca.   ker če je samo en si omejen kako?"
    },
    {
        "role": "assistant_6",
        "message": "Zato ker ce ne mislis imet vec repozitorijev ti featureji GITa, ki jih SVN naprimer nima, ne pridejo do izraza."
    },
    {
        "role": "assistant_4",
        "message": "Kaj ma to veze koliko repozitorijev imas?? A ce mas manj repozitorijev je pa SVN boljsi al kaj? To je res neumno razmisljanje, a če ne rabim featurjev Worda pomeni da moram pisat v Notepadu? Sicer pa tudi če si samo 1 ima git še vedno veliko prednosti: - znatno hitrejše delovanje - možnost offline commitov - če delaš opensource lahko enostavno forkaš na githubu - manj smetenja z version control podatki (samo 1 .git direktorij) - bolj enostavno in local branchanje (veliko hitrejse) - lahko zelo enostavno naredis patche oz diff fajle itd itd. A sem omenil hitrost?  Sori SVN fanboyi ampak SVN se z gitom sploh ne more primerjat."
    },
    {
        "role": "assistant_8",
        "message": "Ja, se strinjam, izredno hiter in zelo učinkovit tudi pri branchanju/merganju. Odkar sem ga začel uporabljati, ne grem več nazaj na svn. Tudi v primeru, da sam razvijaš projekt, se zna zgoditi, da vzporedno razvijaš več vej in sproti mergaš spremembe (med vsemi, samo med nekaterimi, ...). Zase sem opazil, da je to postal privzet način razvoja, predtem sem v svn-ju večinoma delal v trunku, branche pa sem imel zgolj za kakšne obsežnejše spremembe in še takrat sem redko preklapljal med njimi."
    },
    {
        "role": "assistant_3",
        "message": "gitlab  Pa veliko užitkov pri postavitvi ruby okolja."
    },
    {
        "role": "assistant_9",
        "message": "GitHub lahko namestiš tudi na svoj strežnik. Samo malenkost predrago je za osebno rabo.  Hvala za link na gitlab. Screenshoti so mi zaenkrat bistveno bolj všeč od katerekoli druge rešitve.  Nekdo je projekt, ki me zanima in ki sicer nima svojega version controla, uvozil v git. Gitorious za vsako posamezno spremembo pravi, da zaradi prevelikega diff-a ne more prikazati sprememb. To pomeni, da je zame povsem neuporaben vmesnik."
    },
    {
        "role": "assistant_6",
        "message": "@assistant_4 je 27. dec 2011 ob 07:50 izjavil:Kaj ma to veze koliko repozitorijev imas?? A ce mas manj repozitorijev je pa SVN boljsi al kaj? To je res neumno razmisljanje, a če ne rabim featurjev Worda pomeni da moram pisat v Notepadu? Sicer pa tudi če si samo 1 ima git še vedno veliko prednosti: - znatno hitrejše delovanje - možnost offline commitov - če delaš opensource lahko enostavno forkaš na githubu - manj smetenja z version control podatki (samo 1 .git direktorij) - bolj enostavno in local branchanje (veliko hitrejse) - lahko zelo enostavno naredis patche oz diff fajle itd itd. A sem omenil hitrost?  Sori SVN fanboyi ampak SVN se z gitom sploh ne more primerjat. Ubistvu si tocno to povedal kar sm jst reku. Forkanje, branchanje, offline commiti so tocno to kar sem rekel (distributed - imas lokani repozitorij in remote master), in jih jst osebno na projektu kjer sem sam nikoli nisem rabil.Poleg tega sem se dost nafukal pri uporabi v primerjavi s SVNjem (se zdej ne znam uporabljat tricetr plugina v eclipsu). Za hitrost me pa boli kurac."
    },
    {
        "role": "assistant_3",
        "message": "@assistant_9 je 27. dec 2011 ob 10:23 izjavil:GitHub lahko namestiš tudi na svoj strežnik. Samo malenkost predrago je za osebno rabo.  malenkost  Lahko rečemo, da je 5.000$ na 20 uporabnikov, kolikor hočejo za Github enterprise malenkost."
    },
    {
        "role": "assistant_9",
        "message": "@assistant_4: \"manj smetenja z version control podatki\" velja tudi za SVN 1.7, tako da to ni več pravi argument za preferenco git-a.  Jaz spisku dodajam še dve prednosti git-a: - možnost spreminjanja zgodovine (zame je to ključnega pomena) - .git je zanemarljivo majhen (670 povsem netrivialnih commitov - Gitorious niti enega ni sposoben prikazati - zanj so vsi diffi preveliki, zadnja verzija: 44 MB, zip zadnje verzije: 15 MB, .git: 33 MB)  @assistant_6: Če te moti kompleksnost Git-a, vzemi Mercurial (ali Bazaar), ki je zelo podoben SVN-ju.  Za projekte z več občasnimi razvijalci, kjer se razvoj ne križa, je SVN še vedno v redu. Za lastne potrebe (običajne datoteke na disku, mali projektki) pa je SVN \"no go\". Ideja, da moraš imeti za vsak tak projektek prostor na strežniku (ali vsaj repozitorij shranjen nekje drugje na disku) in npr. na vlaku ne moreš delati z repozitorijem, je zame popolnoma nesprejemljiva."
    },
    {
        "role": "assistant_10",
        "message": "Tega pa ne razumem, zakaj pa ne moreš na vlaku delat? Mislem da je SVNju vseeno kje si ti"
    },
    {
        "role": "assistant_11",
        "message": "Glavne razlike med Gitom in Mercurialom? Drugega sem uporabljal, prvega ne."
    },
    {
        "role": "assistant_12",
        "message": "v bistvu je vseeno kaj uporabljaš za version control.  Važno je predvsem da ga uporabljaš ... Znekim pametnim backupom.  Mislim da je na netu dovolj navdil v stilu:  git + dropbox subversion + dropbox CVS + dropbox   Za mazohiste oz. arheologe pa še vednbo obstaja RCS. Za bogate pa ClearCase ..."
    },
    {
        "role": "assistant_9",
        "message": "@assistant_10 je 27. dec 2011 ob 18:47 izjavil:Tega pa ne razumem, zakaj pa ne moreš na vlaku delat? Mislem da je SVNju vseeno kje si ti    SVN-ju je morda res vseeno, pa vseeno ne morem narediti tegale:  <kodiranje>\nsvn ci -m \"prva sprememba\"\n<kodiranje>\nsvn ci -m \"druga sprememba\"\n ali kopirati kode iz starejše verzije datoteke."
    },
    {
        "role": "assistant_10",
        "message": "Mogoče jaz tega ne razumem, ali pa ima eclipsov plugin kaj drugače(čeprav močno dvomim) ampak meni uspe vse to narest :). Vsakič ko čekInaš ti naredi verzijo datoteke, poleg tega imaš pa še lokalno zgodovino. Vpogled imaš v vsako verzijo, ter lahko veselo copy/pastaš kar te matra.  Pa ne da podpiram SVN, ker mi ni najbolj všeč, sam tole pa gre   Pardon za off.."
    },
    {
        "role": "assistant_9",
        "message": "@assistant_10 je 27. dec 2011 ob 20:59 izjavil:Mogoče jaz tega ne razumem ... Vsakič ko čekInaš ti naredi verzijo datoteke, poleg tega imaš pa še lokalno zgodovino.  Bodisi imaš lokalen repozitorij (kar pomeni, da ne moreš delati na projektu skupaj z ostalimi razvijalci) bodisi si online, ko to počneš. Ne moreš pa imeti lokalne zgodovine, če delaš z javnim repozitorijem ... razen če karkoli narobe razumem."
    },
    {
        "role": "assistant_4",
        "message": "Ali ima svn pravzaprav kakšno prednost pred gitom? Lahko pove kdo, ki res uporablja oboje? Jaz je sicer ne vidim, je pa res da svn nisem prav veliko uporabljal, zato me zanima, da bom vedel v prihodnje."
    },
    {
        "role": "assistant_13",
        "message": "@assistant_4 je 28. dec 2011 ob 05:39 izjavil:Ali ima svn pravzaprav kakšno prednost pred gitom? Lahko pove kdo, ki res uporablja oboje? Jaz je sicer ne vidim, je pa res da svn nisem prav veliko uporabljal, zato me zanima, da bom vedel v prihodnje.  kvečjem \"enostavnost\" , pa še to ne več od kar tudi za git obstajajo odlični frontendi. svn je pač starejši pa prvi je imel Tortoise frontend. To mu je njega dni precej dvignilo popularnost. Ampak če ti zadostuje je še vedno spodobna izbira."
    },
    {
        "role": "assistant_9",
        "message": "@assistant_4 je 28. dec 2011 ob 05:39 izjavil:Ali ima svn pravzaprav kakšno prednost pred gitom? Lahko pove kdo, ki res uporablja oboje?    Poleg lažje uporabe je nekajkrat lažje skonfigurirat strežnik - čeprav tega najbrž itak ne boš počel. (Včeraj sem se lotila GitLab-a in je nočna mora namestit vse dependency-je, če nimaš Ubuntu-ja. Hm - morda ga bom pa testirala kar na Ubuntu virtualki?) SVN je starejši in imaš zanj že nekaj preverjenega softvera. Občutek dobivam, da je bil ves omembe vreden softver za git (kot gitlab, gitolite) spisan leta 2011 (ok, gitolite je bil spisan 2009 in opažen leta 2010, gitosis pa je baje že \"out\"). enostavnost uporabe, že nekajkrat omenjena partial checkout. Moj usecase je sledeči: imamo približno 20 različnih platform, za katere različni ljudje prevajajo izvorno kodo v binarne datoteke. SVN izkoriščam za enostaven upload, ker se mi ne da pisati lastne rešitve. Vsak \"prevajalec\" naredi nekaj v smislu \"svn co http://moj.repo/armel-linux\" (iz strežnika potegne samo verzijo programov za svojo platformo), prepiše staro verzijo z novo in commit-a. K sebi mora torej prenesti zgolj eno kopijo vsake datoteke in zgolj za svojo platformo. Po drugi strani na strežniku delam z enim samim repozitorijem. Z Git-om bi morali to početi tako, da bi imeli bodisi več repozitorijev bodisi več vej (branch), vsako za svojo platformo, pa še paziti bi morali, da ne bi prenesli preveč zgodovine, ker se pri binarnih datotekah lahko le-ta hitro nabere. SVN repozitorij je trenutno velik 4 GB, a je samo na strežniku; uporabniki imajo pri sebi zgolj 11 MB. Če bi imel vsak uporabnik svojo git kopijo, bi bila le-ta sicer občutno manjša od 4 GB, a še vedno nezanemarljivo velika. Drugi usecase: checkout nekega SVN repozitorija je velik cca. 4 GB. Ko želim karkoli spremeniti, si k sebi potegnem le tisti direktorij, kjer moram popraviti neko datoteko. Če bi uporabljali git, bi morala k sebi najprej povleči nekaj GB za neko trivialno spremembo. Pri programih (./program --version) se lahko sklicuješ na svn revision in veš, da je revision z večjo številko dejansko novejši. (Ni tehten argument.)"
    },
    {
        "role": "assistant_8",
        "message": "Ne vem, kaj točno si od strežnika želiš, ampak kolikor vem git že od začetka ponuja 'bare-bones' uporabo s pomočjo ssh. Na strežniku dodaš prazen git repozitorij (git init) in ssh accounte za uporabnike, ki imajo read/write dostop do tega repozitorija (lahko delaš tudi s skupnim accountom, ampak to ni kaj preveč varno niti primerno za brskanje po zgodovini). In potem naredijo 'git clone uporabnik@streznik:/repo_path'. Meni se ne zdi tako grozno zakomplicirano. Gitosis in novejši Gitolite pa omogočata še druge stvari, kot npr. upravljanje z uporabniki (brez posamičnih ssh accountov) in bolj napredne varnostne nastavitve, ki jih lahko nastaviš na operacijo (push, commit, ...)."
    },
    {
        "role": "assistant_3",
        "message": "@assistant_9.. sam gitlaba nisem postavljal, sem pa redmine, bo 1x v prihodnosti potrebno nadgraditi na njegov fork ChiliProject, in gitolite. Vse skupaj sem postavljal na 1.04 ubuntu in ja.. naloviti dependencye je nočna mora. Pa pol teh presnetih dependencyev zahteva na mašini gcc, katerega sam nočem na nobeni produkcijski mašini."
    },
    {
        "role": "assistant_9",
        "message": "@assistant_8 je 28. dec 2011 ob 12:27 izjavil:Ne vem, kaj točno si od strežnika želiš, ampak kolikor vem git že od začetka ponuja 'bare-bones' uporabo s pomočjo ssh. Na strežniku dodaš prazen git repozitorij (git init) in ssh accounte za uporabnike, ki imajo read/write dostop do tega repozitorija.   Nočem delati ssh računov za uporabnike, ker nimajo kaj šarit po strežniku. Želim jim dati zgolj pravice za dostop do svojega repozitorija in ničesar drugega. (S SVN-jem preko Apache-ja je to skoraj trivialno.)"
    },
    {
        "role": "assistant_8",
        "message": "Za domačo uporabo je to dovolj dobro, to sem mislil. Mimogrede, a nima tudi git možnosti dostopanja prek apache strežnika? Bi moral prav pogledati, se že nekaj časa nisem s tem ukvarjal."
    },
    {
        "role": "assistant_4",
        "message": "@assistant_9: no od tega kar si omenila se mi zdi najbolj vredno tisto glede partial checkouta... enostavnost uporabe ne razumem, ali se to nanaša na GUI vmesnike? command line je kvečjemu bolj enostaven kot pa svn...  Glede konfiguracije strežnika pa se nebi čisto strinjal. namreč ti omenjaš web (www) vmesnike za git, ki bazirajo na raznih frameworkih, in zato rabiš to dodatno instalirat. Vendar, če rabiš samo \"master\" je dokaj enostavno postavit z \"gitosis\" toolom, rabis pa python in python-setuptools, vendar v tem res ne vidim prevelikega problema, ker ponavadi to ze tako ali tako imas. Potem je stvar nekaj ukazov, da stvar postavis (http://scie.nti.st/2007/11/14/hosting-g.... Pravice za dostop so potem na podlagi ssh public keyev, kot mislim da je standard za git, mislim da ni moznosti dostopa z geslom, kot je pri svn. Vendar pravzaprav je to prednost ker je tako bolj varno. Ko hočeš dodat userja, clonaš določen repozitorij ki ga gitosis ustvari, ki nadzoruje dostop do repojev, in not dodaš public key od te osebe. Mogoče res mičkeno več dela kot če maš web interface ampak če ne rabiš ravno vsak dan dodajat userjev je čist cool. Pa tud sicer vzame pač 1 min namesto 30 sec"
    },
    {
        "role": "assistant_6",
        "message": "Jst hocem GUI, ki je hkrati klient, one click install in ima da dela. Ce to ne gre me produkt ne zanima. In v tem se vecina ljudi ne razlikuje od mene."
    },
    {
        "role": "assistant_4",
        "message": "Sej ga imaš... msysgit (http://code.google.com/p/msysgit/). Tudi SVN lahko dobiš kot konzolno verzijo ali skupaj z GUI (TortoiseSVN), tako da tukaj ni res nobene razlike in ne vem, kaj se pritožuješ  Na linuxu seveda tudi lahko instaliraš samo GUI in se ti bo git naložil samodejno. Na OSX prav tako (GitX). Invalid argument."
    }
]