[
    {
        "role": "user",
        "message": "Zdravo,  v eni drugi temi sem zastavil vprašanje, kako v Pythonu programiramo spletne strani s frameworki. Nadaljujemo tu, ker tema ni bila primerna.  Torej, s programiranjem spletnih strani nimam preveč izkušenj. Se ravno začenjam ukvarjat s Pythonom in menda se zelo lepo da delat spletne strani v njem. Python kot švicarski nožek mi je precej všeč, zato bi rad nekaj osnovnih informacij, kako se tega lotit, kako poteka sploh zgleda programiranje v npr. Djangu... In plain SLO    Tenkjuverimač!"
    },
    {
        "role": "assistant_0",
        "message": "Jaz ti predlagam da z Djangom začneš  tu. Sicer res ni v slovenščini, ampak v vsakem primeru boš moral obvladata angleščino za dodaten support, ki ga ne boš dobil nikjer v slovenščini. Kar se tiče pythona pa je najbolje da dobiš en simple tutorial za začetek, potem pa si mal pogledaš  python dokumentacijo. Kateri tutorial ali kjnigo izbrat, pa je odvisno od tvojega predznanja programiranja. Si že kaj programiral v drugih jezikih? En fajn tutorial, morda malce zastarel, je  dive into python. Obstaja pa tudi  SOUP. Manjša slovenska skupnost pythonovcev."
    },
    {
        "role": "user",
        "message": "TNX.  Po teh straneh sem že gledal. Ja, vem, da ni druge, kot zakopat se in delat. Drugače programiram desktop aplikacije v Delphiju, tako da mi programiranje ni čisto tuje.  Kar bi rad je en tak simpl overview, kako sploh prideš od python \"skripte\" do delujoče web aplikacije. Na področju web aplikacij mi manjka velik kos znanja, nisem še nikdar delal ne v php-ju, ne v javi...  Tako da upam, da bi mi lahko kdo v grobem pojasnil, kako in kaj.  Itak pa vem, da mi branje kakšne poglobljene literature in pa neposredno delo s pythonom/djangom ne uide..."
    },
    {
        "role": "assistant_0",
        "message": "Če hočeš web aplikacijo, potrebuješ web server. Lahko je to apache, lighttpd in podobni. Pri Djangu dobiš poseben development server, napisan kar v pythonu, ki pa ni primeren za produkcijo. Web server potrebuješ, da čaka na requeste in jih potem \"posreduje\" tvoji aplikaciji (seveda, če je primerno skonfiguriran). Ta aplikacija, nekaj malega poračuna, dobi podatake iz baze, sestavi \"odgovor\", ga pošlje web serverju, ki ta resposne pravilno pošlje klientu. Tako po kmečko povedano. Za razliko od PHPja, je Djangov proces zagnan ob zagonu webserverja, ko naloži v spomin vse podaplikacije in njihove modele (data model) in je zato zadeva precej hitra. Pri PHPju se za vsak request ponovno zažene skripta, ki se po končanem requestu ugasne. Tako v grobem."
    },
    {
        "role": "assistant_1",
        "message": "Django je precej kul, ker za postavitev sploh ne tako trivialnih strani praktično ne rabiš pisat kaj dosti python kode, ampak večino časa zgolj uporabljaš vgrajene zadeve. Priprava podatkovne baze (pisanje modelov) je sploh precej trivialno opravilo, je pa res, da si boš pač tekom učenja moral razjasniti nekatere pojme. Za začetek ti tud ni treba razmišljati o postavljaju web serverja, ker ima django vgrajen development web server, ki čisto super služi za testiranje, razhroščevanje in podobne zadeve. Ko boš mel kaj bolj konkretnega, pa vprašaj in ti bo že kdo pomagal to spravit na recimo lighttpd + fastcgi al pa kaj podobnega.  Zaenkrat pa se zakoplji v tutorial. Ne gre drugače, hebat ga. Je precej brezveze nekaj \"na suho\" razlagat, ker dokler ne vidiš, kako zadeva deluje, boš itak bolj malo dojel."
    },
    {
        "role": "assistant_2",
        "message": "Da ne boste samo delni offtopic nabijali... Opiše kdo zakaj Django, zakaj TurboGears? Kaj je prednost enega ali drugega (dokumentacija, stabilnost, enostavnost....)?"
    },
    {
        "role": "user",
        "message": "Ja, TNX zaenkrat. Sem bil čez vikend odsoten, pa se malo z zamudo oglašam."
    },
    {
        "role": "assistant_3",
        "message": "cime ...  Zakaj Django?  Django je kul, če rabiš nekaj hitro spacat skupaj, ker imaš že vse vključeno. Krivulja učenja je precej položna, tako da se začetnikom ni potrebno pretirano ubadat s tem kako se uporablja določen del Djangota, ampak samo sledi tutorialom in dokaj hitro pride do delujoče strani.  Zakaj TurboGears?  Če človek točno ve kaj potrebuje, potem bo verjetno vzel TurboGears. Dejstvo je, da je včasih posamezen del Djangota prešvoh, da bi naredil kar hočeš. Ali pa prepočasen."
    }
]