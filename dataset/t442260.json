[
    {
        "role": "user",
        "message": "Živijo!  V čem je fora get/set-a?  private mojObjektTip mojObjekt;  public mojObjektTip MojObjekt  {  get { return mojObjekt; }  set { mojObjekt = value; }  }"
    },
    {
        "role": "assistant_0",
        "message": "znotrej get set ti lahko delaš določene operacije; npr. bereš iz sessiona(v ASP.NET). primer:  public string zapisVSession\n{\nget{return Session[\"mojString\"].ToString();}\nset{Session[\"mojString\"] = value;}\n}\n  EDIT: Lahko pa tudi operiraš z določenimi vrednostmi pred izpisom... primer:  public string zapisVSession\n{\nget{return (value*3);}\nset{}\n}"
    },
    {
        "role": "user",
        "message": "kako pa potem to uporabljaš?"
    },
    {
        "role": "assistant_1",
        "message": "Recimo ustvariš objekt  Objekt prvi; //potem s pomocjo set metode mu nastavis recimo visino in sirino in jo potem izpises, seveda pa moraš vsako narejeno metodo imeti implementirano prvi.setSirina(10); prvi.setVisina(5); prvi.izpis();  referenca: http://www.cplusplus.com/doc/tutorial/c..."
    },
    {
        "role": "assistant_2",
        "message": "@assistant_1?  @user:   Če imaš npr. enostaven razred:   class Clovek\n{\n   public string Ime { get; set; }\n   public string Priimek { get; set; }\n\n   public string PolnoIme \n   { \n      get { return Ime + \" \" + Priimek; }\n   }\n}  lahko potem uporabljas  instancaCloveka.PolnoIme na praktično enak način kot vse ostale javne spremenljivke tega razreda..."
    },
    {
        "role": "assistant_3",
        "message": "poglej to: [c#] get, set"
    }
]